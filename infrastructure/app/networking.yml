AWSTemplateFormatVersion: 2010-09-09
Description: VPCs, subnets, and related for XSRT
# Mappings:
#   NatRegionMap:
#     us-east-1:
#       AMI: "ami-184dc970"
#     us-west-1:
#       AMI: "ami-a98396ec"
#     us-west-2:
#       AMI: "ami-290f4119"
Resources:
  MainVPC:
    Type: "AWS::EC2::VPC"
    Properties:
      CidrBlock: 10.0.0.0/16
      Tags:
        - Key: Name
          Value: xsrt-vpc
  InternetGateway:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
      - Key: Name
        Value: xsrt-internet-gateway
  EgressOnlyInternetGateway:
    Type: AWS::EC2::EgressOnlyInternetGateway
    Properties:
      VpcId: !Ref MainVPC
  InternetGatewayAttachment:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId: !Ref MainVPC
      InternetGatewayId: !Ref InternetGateway
  PublicSubnetA:
    Type: AWS::EC2::Subnet
    Properties:
      CidrBlock: 10.0.0.0/24
      VpcId: !Ref MainVPC
      AvailabilityZone: !Select [ 0, !GetAZs "" ]
      MapPublicIpOnLaunch: true
      Tags:
        - Key: Name
          Value: xsrt-public-a
  PublicSubnetB:
    Type: AWS::EC2::Subnet
    Properties:
      CidrBlock: 10.0.1.0/24
      VpcId: !Ref MainVPC
      AvailabilityZone: !Select [ 1, !GetAZs "" ]
      MapPublicIpOnLaunch: true
      Tags:
        - Key: Name
          Value: xsrt-public-b
  PublicSubnetC:
    Type: AWS::EC2::Subnet
    Properties:
      CidrBlock: 10.0.2.0/24
      VpcId: !Ref MainVPC
      AvailabilityZone: !Select [ 2, !GetAZs "" ]
      MapPublicIpOnLaunch: true
      Tags:
        - Key: Name
          Value: xsrt-public-c
  PrivateSubnetA:
    Type: AWS::EC2::Subnet
    Properties:
      CidrBlock: 10.0.10.0/24
      VpcId: !Ref MainVPC
      AvailabilityZone: !Select [ 0, !GetAZs "" ]
      Tags:
        - Key: Name
          Value: xsrt-public-a
  PrivateSubnetB:
    Type: AWS::EC2::Subnet
    Properties:
      CidrBlock: 10.0.11.0/24
      VpcId: !Ref MainVPC
      AvailabilityZone: !Select [ 1, !GetAZs "" ]
      Tags:
        - Key: Name
          Value: xsrt-public-b
  PrivateSubnetC:
    Type: AWS::EC2::Subnet
    Properties:
      CidrBlock: 10.0.12.0/24
      VpcId: !Ref MainVPC
      AvailabilityZone: !Select [ 2, !GetAZs "" ]
      Tags:
        - Key: Name
          Value: xsrt-public-c
  DbSubnetA:
    Type: AWS::EC2::Subnet
    Properties:
      CidrBlock: 10.0.20.0/24
      VpcId: !Ref MainVPC
      AvailabilityZone: !Select [ 0, !GetAZs "" ]
      Tags:
        - Key: Name
          Value: xsrt-db-a
  DbSubnetB:
    Type: AWS::EC2::Subnet
    Properties:
      CidrBlock: 10.0.21.0/24
      VpcId: !Ref MainVPC
      AvailabilityZone: !Select [ 1, !GetAZs "" ]
      Tags:
        - Key: Name
          Value: xsrt-db-b
  DbSubnetC:
    Type: AWS::EC2::Subnet
    Properties:
      CidrBlock: 10.0.22.0/24
      VpcId: !Ref MainVPC
      AvailabilityZone: !Select [ 2, !GetAZs "" ]
      Tags:
        - Key: Name
          Value: xsrt-db-c
  MainRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref MainVPC
      Tags:
      - Key: Name
        Value: xsrt-default-table
  PublicRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref MainVPC
      Tags:
      - Key: Name
        Value: xsrt-public-table
  PrivateRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref MainVPC
      Tags:
      - Key: Name
        Value: xsrt-private-table
  PublicSubnetDefaultRoute:
    DependsOn: InternetGatewayAttachment
    Type: AWS::EC2::Route
    Properties:
      RouteTableId: !Ref PublicRouteTable
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref InternetGateway
  PublicSubnetIPV6Route:
    DependsOn: InternetGatewayAttachment
    Type: AWS::EC2::Route
    Properties:
      RouteTableId: !Ref PublicRouteTable
      DestinationIpv6CidrBlock: ::/0
      GatewayId: !Ref InternetGateway
  PrivateSubnetDefaultRoute:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId: !Ref PrivateRouteTable
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId: !Ref NATGateway
  PrivateSubnetIPV6Route:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId: !Ref PrivateRouteTable
      DestinationIpv6CidrBlock: ::/0
      EgressOnlyInternetGatewayId: !Ref EgressOnlyInternetGateway
  NatEIP:
    DependsOn: InternetGatewayAttachment
    Type: AWS::EC2::EIP
    Properties:
      Domain: vpc
      Tags:
      - Key: Name
        Value: xsrt-nat-eip
  NATGateway:
    DependsOn: InternetGatewayAttachment
    Type: AWS::EC2::NatGateway
    Properties:
      AllocationId: !GetAtt ["NatEIP", "AllocationId"]
      SubnetId: !Ref PublicSubnetA
      Tags:
      - Key: Name
        Value: xsrt-nat-gateway
Outputs:
  VPC:
    Value: !Ref MainVPC
  PublicSubnetA:
    Value: !Ref PublicSubnetA
  PublicSubnetB:
    Value: !Ref PublicSubnetB
  PublicSubnetC:
    Value: !Ref PublicSubnetC
  PrivateSubnetA:
    Value: !Ref PrivateSubnetA
  PrivateSubnetB:
    Value: !Ref PrivateSubnetB
  PrivateSubnetC:
    Value: !Ref PrivateSubnetC
  DBSubnetA:
    Value: !Ref DbSubnetA
  DBSubnetB:
    Value: !Ref DbSubnetB
  DBSubnetC:
    Value: !Ref DbSubnetC
